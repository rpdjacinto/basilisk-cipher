{"version":3,"sources":["components/background/index.js","components/cipher/index.js","cipher/index.js","components/app/index.js","reportWebVitals.js","index.js"],"names":["Background","styled","div","CipherCylinder","Dials","InputWrapper","InputWheelWrapper","InputWheelDial","InputHint","InputWheelButton","button","InputWheel","hint","value","maxValue","onValueChange","hintComponent","icon","onClick","faAngleUp","faAngleDown","PasswordContainer","PasswordView","cardRanks","cardSuits","CardContainer","props","colour","CardView","rank","suit","PasswordWindow","cards","password","map","card","index","Cipher","useState","input1","setInput1","input2","setInput2","input3","setInput3","month","day","hour","x","values","length","y","getPassword","faMoon","faSun","faClock","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qbAGA,IAQeA,EARIC,IAAOC,IAAV,K,01ECKhB,IAAMC,EAAiBF,IAAOC,IAAV,KAadE,EAAQH,IAAOC,IAAV,KAOLG,EAAeJ,IAAOC,IAAV,KAQZI,EAAoBL,IAAOC,IAAV,KAMjBK,EAAiBN,IAAOC,IAAV,KAQdM,EAAYP,IAAOC,IAAV,KAOTO,EAAmBR,IAAOS,OAAV,KAehBC,EAAa,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACnCC,EAAgBJ,EAClB,cAACJ,EAAD,UACI,cAAC,IAAD,CAAiBS,KAAML,MAE3B,KACJ,OACI,eAACP,EAAD,WACMW,EACF,eAACV,EAAD,WACI,cAACG,EAAD,CAAkBS,QAAU,WAAQH,EAAcF,EAAQ,EAAI,EAAIA,EAAQ,EAAIC,IAA9E,SACI,cAAC,IAAD,CAAiBG,KAAME,QAE3B,cAACZ,EAAD,UACKM,IAEL,cAACJ,EAAD,CAAkBS,QAAU,WAAQH,EAAeF,EAAQ,GAAMC,EAAWD,EAAQ,EAAI,IAAxF,SACI,cAAC,IAAD,CAAiBI,KAAMG,eAOrCC,EAAoBpB,IAAOC,IAAV,KASjBoB,EAAerB,IAAOC,IAAV,KAcZqB,EAAY,CACd,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,IAAK,IAAK,KAG3DC,EAAY,CACd,SAAK,SAAK,SAAK,UAGbC,EAAgBxB,IAAOC,IAAV,KACN,SAAAwB,GAAK,OAAIA,EAAMC,UAQtBC,EAAW,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KAChBH,EAASG,EAAO,IAAM,EAAI,QAAU,MAC1C,OACI,eAACL,EAAD,CAAeE,OAAQA,EAAvB,UACKJ,EAAUM,GAAOL,EAAUM,OAMlCC,EAAiB,SAAC,GAAkB,IAChCC,EAD+B,EAAfC,SACCC,KAAI,SAACC,EAAMC,GAC9B,OAAO,cAAC,EAAD,CAAsBP,KAAMM,EAAKN,KAAMC,KAAMK,EAAKL,MAAnCM,MAE1B,OACI,cAACf,EAAD,UACI,cAACC,EAAD,UACKU,OAwBFK,EAlBA,WAAO,IAAD,EACaC,mBAAS,GADtB,mBACTC,EADS,KACDC,EADC,OAEaF,mBAAS,GAFtB,mBAETG,EAFS,KAEDC,EAFC,OAGaJ,mBAAS,GAHtB,mBAGTK,EAHS,KAGDC,EAHC,KAIXX,ECjKiB,SAACY,EAAOC,EAAKC,GACpC,IAAMC,GAAKH,EAAQE,GAAQE,IAAOC,OAC5BC,GAAKL,EAAMC,GAAQE,IAAOD,GAAGE,OACnC,OAAOD,IAAOD,GAAGG,GD8JAC,CAAYb,EAAQE,EAAQE,GAE7C,OACI,eAACxC,EAAD,WACI,eAACC,EAAD,WACI,cAAC,EAAD,CAAYQ,KAAMyC,IAAQxC,MAAO0B,EAAQzB,SAAU,GAAIC,cAAgB,SAACF,GAAY2B,EAAU3B,MAC9F,cAAC,EAAD,CAAYD,KAAM0C,IAAOzC,MAAO4B,EAAQ3B,SAAU,GAAIC,cAAgB,SAACF,GAAY6B,EAAU7B,MAC7F,cAAC,EAAD,CAAYD,KAAM2C,IAAS1C,MAAO8B,EAAQ7B,SAAU,GAAIC,cAAgB,SAACF,GAAY+B,EAAU/B,SAEnG,cAAC,EAAD,CAAgBoB,SAAUA,QEjKvBuB,EANH,WACR,OAAQ,cAAC,EAAD,UACJ,cAAC,EAAD,OCKOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAE1Bb,K","file":"static/js/main.224afeae.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Background = styled.div`\n    width: 100vw;\n    height: 100vh;\n    background-image: linear-gradient(135deg, #415a77, #0d1b2a);\n    display: grid;\n    place-items: center;\n`\n\nexport default Background","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAngleUp, faAngleDown, faSun, faMoon, faClock } from '@fortawesome/free-solid-svg-icons'\n\nimport { getPassword } from '../../cipher'\n\n\nconst CipherCylinder = styled.div`\n    font-family: 'Inknut Antiqua', serif;\n    width: 320px;\n    height: 550px;\n    background-image: linear-gradient(#b58463, #ffcb69, #ffcb69, #b58463);\n    border-radius: 16%;\n    border: 4px solid #997b66;\n    display: grid;\n    grid-template-columns: 32px auto 32px;\n    grid-template-rows: 64px auto auto 64px;\n    place-items: center;\n`\n\nconst Dials = styled.div`\n    grid-column-start: 2;\n    grid-row-start: 2;\n    display: flex;\n    height: 100%;\n`\n\nconst InputWrapper = styled.div`\n    height: 100%;\n    width: 64px;\n    margin: 8px;\n    display: flex;\n    flex-direction: column;\n`\n\nconst InputWheelWrapper = styled.div`\n    flex: 5;\n    border: 4px solid #997b66;\n    display: flex;\n    flex-direction: column;\n`\nconst InputWheelDial = styled.div`\n    flex: 4;\n    background-image: linear-gradient(#acacac, #fefefe, #fefefe, #acacac);\n    display: grid;\n    place-items: center;\n    font-size: 24px;\n`\n\nconst InputHint = styled.div`\n    flex: 1;\n    font-size: 24px;\n    color: #997b66;\n    text-align: center;\n`\n\nconst InputWheelButton = styled.button`\n    flex: 1;\n    margin: 0;\n    padding: 8px 16px;\n    width: 100%;\n    height: 100%;\n    background: #dc9c63;\n    display: grid;\n    place-items: center;\n    border: 0;\n    font-size: 24px;\n    color: #997b66;\n    text-align: center;\n`\n\nconst InputWheel = ({ hint, value, maxValue, onValueChange }) => {\n    const hintComponent = hint ? (\n        <InputHint>\n            <FontAwesomeIcon icon={hint} />\n        </InputHint>\n    ) : null\n    return (\n        <InputWrapper>\n            { hintComponent }\n            <InputWheelWrapper>\n                <InputWheelButton onClick={ () => { onValueChange(value - 1 > 0 ? value - 1 : maxValue) } } >\n                    <FontAwesomeIcon icon={faAngleUp} />\n                </InputWheelButton>\n                <InputWheelDial>\n                    {value}\n                </InputWheelDial>\n                <InputWheelButton onClick={ () => { onValueChange((value + 1) <= maxValue ? value + 1 : 1 ) } }>\n                    <FontAwesomeIcon icon={faAngleDown} />\n                </InputWheelButton>\n            </InputWheelWrapper>\n        </InputWrapper>\n    )\n}\n\nconst PasswordContainer = styled.div`\n    grid-column-start: 2;\n    grid-row-start: 3;\n    width: 100%;\n    height: 100%;\n    display: grid;\n    place-items: center;\n`\n\nconst PasswordView = styled.div`\n    width: 100%;\n    height: 100px;\n    background-image: linear-gradient(#acacac, #fefefe, #fefefe, #acacac);\n    border: 4px solid #997b66;\n    display: flex;\n    div {\n        border-right: 1px solid #343434;\n    }\n    div:last-child {\n        border: none;\n    }\n`\n\nconst cardRanks = [\n    'A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'\n]\n\nconst cardSuits = [\n    '♠', '♥', '♣', '♦'\n]\n\nconst CardContainer = styled.div`\n    color: ${props => props.colour};\n    display: grid;\n    place-items: center;\n    flex: 1;\n    width: 32px;\n    font-size: 18px;\n`\n\nconst CardView = ({ rank, suit }) => {\n    const colour = suit % 2 === 0 ? 'black' : 'red'\n    return (\n        <CardContainer colour={colour}>\n            {cardRanks[rank]}{cardSuits[suit]}\n        </CardContainer>\n    )\n}\n\n\nconst PasswordWindow = ({ password }) => {\n    const cards = password.map((card, index) => {\n        return <CardView key={index} rank={card.rank} suit={card.suit} />\n    })\n    return (\n        <PasswordContainer>\n            <PasswordView>\n                {cards}\n            </PasswordView>\n        </PasswordContainer>\n    )\n}\n\nconst Cipher = () => {\n    const [ input1, setInput1 ] = useState(1)\n    const [ input2, setInput2 ] = useState(1)\n    const [ input3, setInput3 ] = useState(1)\n    const password = getPassword(input1, input2, input3)\n\n    return (\n        <CipherCylinder>\n            <Dials>\n                <InputWheel hint={faMoon} value={input1} maxValue={12} onValueChange={ (value) => { setInput1(value) } }/>\n                <InputWheel hint={faSun} value={input2} maxValue={28} onValueChange={ (value) => { setInput2(value) } }/>\n                <InputWheel hint={faClock} value={input3} maxValue={24} onValueChange={ (value) => { setInput3(value) } }/>\n            </Dials>\n            <PasswordWindow password={password} />\n        </CipherCylinder>\n    )\n}\n\nexport default Cipher","import { values } from './lookup-table.json'\n\nexport const getPassword = (month, day, hour) => {\n    const x = (month + hour) % values.length\n    const y = (day + hour) % values[x].length\n    return values[x][y]\n}","import React from 'react'\n\nimport Background from '../../components/background'\nimport Cipher from '../../components/cipher'\n\nconst App = () => {\n    return (<Background>\n        <Cipher />\n    </Background>)\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/app'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\nreportWebVitals()\n"],"sourceRoot":""}